"""
프로그래밍에서 함수는, 입력을 해주면 출력을 해주는 '도구'다.
어떤 입력값을 주었을 때 어떤 결과값을 돌려주는 것이 함수의 특징이다.

즉 입력값 이라는 재료를 함수라는 상자에 넣었다가 빼면, 결괏값이라는 완성품이 나온다.

이런 함수의 형태를 쉽게 표현하자면 

[재료] 입력 -> [상자] 함수  -> [완성품] 결괏값  이다.



파이썬 함수의 구조

def add(a,b):
    return a+b

로 만들 수 있다. 입력값 a,b를 넣으면 결과값 a+b를 돌려준다. 
자세히 해석 하자면 이 함수의 이름은 add이고 입력으로 a,b 두 개의 값을 받으며 결괏값은 2개의 입력값을 더한 값이다.

이 이외에도 다양한 형태의 함수가 있다.

"""

# 입력값이 없는 함수.

def hello():
    return 'HI~'
# def hello(   ) <- 괄호 안에 입력 값이 없다.





# 결괏값이 없는 함수.
def add(a,b):
    print("%d, %d의 합은 %d입니다." % (a,b,a+b))
# 이 위치에 return이 들어가야하지만, 결괏값이 없는 함수이기 때문에 안들어간다.

add(1,2)


#입력값도 결괏값도 없는 함수
def say():
    print("HI'")
# say(    ) <- 괄호 안에 입력 값이 없다. 또한 return해주는 값도 없다.





################################################################################################
"""
# 입력 값이 몇개가 될지도 모를 떄는 어떻게 해야하나?
# 우리 함수를 만들 때, 받은 입력 값을 모두 더해주는 함수를 만들어 보려고 할 때, (  ) 안에는 몇개의 매개 변수를 만들어 줘야 하나?

예를 들어 add_1(1,2)를 하면 3을 출력하고, add_2(1,2,3)을 하면 6을 출력하는 함수가 있다고 하자. 두 함수는 모두 같은 기능을 한다.
하지만 두 함수는 각각 다른 함수이다. 
즉 같은 기능을 하는 함수를 매개 변수의 개수가 다를 때마다 다시 만들어야 할까? 이렇게 하면 된다.
"""
def add_many(*args): # 변수 이름 앞에 *를 붙히면 입력값을 모두 모아서 튜플로 만들어준다 !!! 중요!!   [튜플은 변화 불가한 리스트.]
    result = 0
    for i in args:
        result = result + i
    return result


result = add_many(1,2,3,4,5,6,7,8,9)
print(result) #1~9의 합을 출력함.


# 응용

def add_mul(choice, *args):
    if choice == "add":
        result = 0
        for i in args:
            result = result + i
    elif choice == "mul":
        result = 1
        for i in args:
            result = result * i

    return result

test = add_mul("mul",1,2,3,4,5)
print(test)



###################################
#매개 변수에 초기값 미리 설정하기.
"""
매개 변수에 최깃값을 미리 설정하는 방법을 알아보자.

def  secore (a,b) 형태의 함수를 실행할 때, 우리가 a,b에 값을 넣어주지 않는다면
함수는 정상적으로 실행을 할까? 결론은 하지 않는다.

이런 경우를 방지하고자 def secore(a = 0, b = 0) 형태로 만들어 줄 수 있다.

예제를 통해 살펴 보자.
"""

def say_myself(name, old, man = True): # 여기서 성별은 미리 초깃값을 지정해 준다. 
    #함수의 매개변수에서 들어갈 값이 항상 변하는 것이 아닐 경우에는 이렇게 초깃값을 미리 해줄 수 있다.

    print("나의 이름은 %s입니다." % name) 
    print("나이는 %d살입니다.")
    if man:
        print("남자입니다")
    else:
        print("여자입니다.")



say_myself("최지환",24)




###################################
"""
lambda

lambda는 함수를 생성할 때 사용하는 예약어다. def와 동일한 역할을 한다.
복잡하지 않은 함수를 만들 때 많이 사용한다.

형태는 이와 같다.
lambda 매개변수 1, 매개변수 2, ... : 매개변수를 사용한 표현식

"""

#예제
add = lambda a, b : a+b 
result = add(3,4)

print(result)
# 간단하다. lambda 매개변수 : return 형태로 이해하면 더 간단할 것 이다.